services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: three_layers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"

  three-layers-api:
    build:
      context: .
      dockerfile: src/ThreeLayers.WebApi/Dockerfile
    container_name: three-layers-api
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=three_layers;Username=postgres;Password=postgres
      - Serilog__WriteTo__1__Args__nodeUris=http://elasticsearch:9200
    ports:
      - "5001:8080"
    networks:
      - default

volumes:
  pgdata:
  esdata:
